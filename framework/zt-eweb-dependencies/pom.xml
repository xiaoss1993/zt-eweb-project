<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-parent</artifactId>
    <version>2.7.18</version>
    <relativePath/>
  </parent>
  <groupId>com.zt.eweb</groupId>

  <version>${revision}</version>
  <artifactId>zt-eweb-dependencies</artifactId>
  <packaging>pom</packaging>


  <properties>
    <revision>1.1.0</revision>
    <java.version>1.8</java.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <flatten-maven-plugin.version>1.6.0</flatten-maven-plugin.version>

    <!-- 统一依赖管理 -->
    <spring.framework.version>5.3.39</spring.framework.version>
    <spring.security.version>5.8.14</spring.security.version>
    <spring.boot.version>2.7.18</spring.boot.version>
    <spring.cloud.version>2021.0.9</spring.cloud.version>
    <spring.cloud.alibaba.version>2021.0.6.2</spring.cloud.alibaba.version>
    <springdoc.version>1.7.0</springdoc.version>
    <knife4j.version>4.5.0</knife4j.version>
    <feilong-spring.version>5.1.1</feilong-spring.version>
    <reflections.version>0.10.2</reflections.version>

    <commons-io.version>2.16.0</commons-io.version>
    <commons-lang3.version>3.14.0</commons-lang3.version>
    <dm8.jdbc.version>8.1.2.141</dm8.jdbc.version>
    <druid.version>1.2.24</druid.version>
    <dynamic-datasource.version>3.6.1</dynamic-datasource.version>
    <hibernate-validator.version>6.2.5.Final</hibernate-validator.version>
    <jsqlparser.version>4.9</jsqlparser.version>
    <lombok-mapstruct-binding.version>0.2.0</lombok-mapstruct-binding.version>
    <mybatis-plus-generator.version>3.5.6</mybatis-plus-generator.version>
    <mybatis-plus-join-boot-starter.version>1.4.6</mybatis-plus-join-boot-starter.version>

    <!-- Test 测试相关 -->
    <podam.version>7.2.11.RELEASE</podam.version> <!-- Spring Boot 2.X 最多使用 7.2.11 版本 -->
    <jedis-mock.version>1.1.4</jedis-mock.version>
    <mockito-inline.version>4.11.0</mockito-inline.version>

    <powermock.version>2.0.9</powermock.version>
    <hutool.version>5.8.35</hutool.version>
    <mybatis-plus.version>3.5.6</mybatis-plus.version>
    <mybatis-spring.version>2.1.2</mybatis-spring.version>
    <guava.version>33.4.0-jre</guava.version>
    <fastjson.version>1.2.83</fastjson.version>
    <mybatis.version>3.5.16</mybatis.version>
    <lombok.version>1.18.36</lombok.version>
    <redisson.version>3.18.0</redisson.version>
    <mapstruct.version>1.6.3</mapstruct.version>
    <logback.version>1.2.13</logback.version>
    <transmittable-thread-local.version>2.14.2</transmittable-thread-local.version>
  </properties>

  <developers>
    <developer>
      <id>zt-eweb</id>
      <name>xiaoss</name>
      <email>982637685@qq.com</email>
    </developer>
  </developers>
  <dependencyManagement>
    <dependencies>
      <!-- 统一依赖管理 -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-framework-bom</artifactId> <!-- JDK8 版本独有：保证 Spring Framework 尽量高 -->
        <version>${spring.framework.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.springframework.security</groupId>
        <artifactId>spring-security-bom</artifactId> <!-- JDK8 版本独有：保证 Spring Security 尽量高 -->
        <version>${spring.security.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring.boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring.cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>com.github.ifeilong</groupId>
        <artifactId>feilong-spring</artifactId>
        <version>${feilong-spring.version}</version>
      </dependency>
      <dependency>
        <groupId>com.github.ifeilong</groupId>
        <artifactId>feilong</artifactId>
        <version>4.3.0</version>
      </dependency>
      <dependency>
        <groupId>com.alibaba.cloud</groupId>
        <artifactId>spring-cloud-alibaba-dependencies</artifactId>
        <version>${spring.cloud.alibaba.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.anyline</groupId>
        <artifactId>anyline-dependency</artifactId>
        <version>8.7.2-SNAPSHOT</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>${lombok.version}</version>
      </dependency>
      <dependency>
        <artifactId>mapstruct</artifactId>
        <groupId>org.mapstruct</groupId> <!-- use mapstruct-jdk8 for Java 8 or higher -->
        <version>${mapstruct.version}</version>
      </dependency>
      <dependency>
        <artifactId>mapstruct-jdk8</artifactId>
        <groupId>org.mapstruct</groupId>
        <version>${mapstruct.version}</version>
      </dependency>
      <dependency>
        <artifactId>mapstruct-processor</artifactId>
        <groupId>org.mapstruct</groupId>
        <version>${mapstruct.version}</version>
      </dependency>
      <dependency>
        <artifactId>DmJdbcDriver18</artifactId>
        <groupId>com.dameng</groupId>
        <version>${dm8.jdbc.version}</version>
      </dependency>
      <dependency>
        <artifactId>druid</artifactId>
        <groupId>com.alibaba</groupId>
        <version>${druid.version}</version>
      </dependency>
      <dependency>
        <groupId>com.alibaba</groupId>
        <artifactId>druid-spring-boot-starter</artifactId>
        <version>${druid.version}</version>
      </dependency>
      <dependency>
        <artifactId>mybatis-plus-annotation</artifactId>
        <groupId>com.baomidou</groupId>
        <version>${mybatis-plus.version}</version>
      </dependency>
      <dependency>
        <artifactId>mybatis-plus-core</artifactId>
        <groupId>com.baomidou</groupId>
        <version>${mybatis-plus.version}</version>
      </dependency>
      <dependency>
        <artifactId>mybatis-plus</artifactId>
        <groupId>com.baomidou</groupId>
        <version>${mybatis-plus.version}</version>
      </dependency>
      <!--mybatis plus extension,包含了mybatis plus core-->
      <dependency>
        <artifactId>mybatis-plus-extension</artifactId>
        <groupId>com.baomidou</groupId>
        <version>${mybatis-plus.version}</version>
      </dependency>
      <dependency>
        <groupId>com.baomidou</groupId>
        <artifactId>mybatis-plus-boot-starter</artifactId>
        <version>${mybatis-plus.version}</version>
      </dependency>
      <dependency>
        <groupId>com.baomidou</groupId>
        <artifactId>mybatis-plus-boot-starter-test</artifactId>
        <version>${mybatis-plus.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>com.baomidou</groupId>
        <artifactId>mybatis-plus-generator</artifactId>
        <version>${mybatis-plus.version}</version>
      </dependency>
      <dependency>
        <artifactId>mybatis</artifactId>
        <groupId>org.mybatis</groupId>
        <version>${mybatis.version}</version>
      </dependency>
      <dependency>
        <artifactId>mybatis-spring</artifactId>
        <groupId>org.mybatis</groupId>
        <version>${mybatis-spring.version}</version>
      </dependency>
      <!-- jsqlparser -->
      <dependency>
        <artifactId>jsqlparser</artifactId>
        <groupId>com.github.jsqlparser</groupId>
        <version>${jsqlparser.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.velocity</groupId>
        <artifactId>velocity-engine-core</artifactId>
        <version>2.3</version>
      </dependency>
      <dependency>
        <groupId>com.github.pagehelper</groupId>
        <artifactId>pagehelper-spring-boot-starter</artifactId>
        <version>2.0.0</version>
      </dependency>
      <dependency>
        <groupId>com.github.xiaoymin</groupId>
        <artifactId>knife4j-openapi3-spring-boot-starter</artifactId>
        <version>4.3.0</version>
      </dependency>
      <dependency>
        <groupId>com.alibaba</groupId>
        <artifactId>transmittable-thread-local</artifactId> <!-- 解决 ThreadLocal 父子线程的传值问题 -->
        <version>${transmittable-thread-local.version}</version>
      </dependency>
      <dependency>
        <groupId>com.alibaba</groupId>
        <artifactId>fastjson</artifactId>
        <version>${fastjson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${guava.version}</version>
      </dependency>
      <dependency>
        <groupId>cn.hutool</groupId>
        <artifactId>hutool-all</artifactId>
        <version>${hutool.version}</version>
      </dependency>
      <dependency>
        <artifactId>commons-io</artifactId>
        <groupId>commons-io</groupId>
        <version>${commons-io.version}</version>
      </dependency>
      <dependency>
        <groupId>com.github.jsonzou</groupId>
        <artifactId>jmockdata</artifactId>
        <version>4.3.0</version>
      </dependency>

      <dependency>
        <groupId>org.testng</groupId>
        <artifactId>testng</artifactId>
        <version>7.0.0</version>
        <scope>test</scope>
      </dependency>
      <!-- JUnit5核心 -->
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-api</artifactId>
        <version>5.8.2</version>
        <scope>test</scope>
      </dependency>
      <!-- JUnit4兼容引擎（用于运行混合测试） -->
      <dependency>
        <groupId>org.junit.vintage</groupId>
        <artifactId>junit-vintage-engine</artifactId>
        <version>5.8.2</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-inline</artifactId>
        <version>5.2.0</version>
        <scope>test</scope>
      </dependency>
      <!-- PowerMock兼容层 -->
      <dependency>
        <groupId>org.powermock</groupId>
        <artifactId>powermock-module-junit4</artifactId>
        <version>${powermock.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.powermock</groupId>
        <artifactId>powermock-api-mockito2</artifactId>
        <version>${powermock.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.powermock</groupId>
        <artifactId>powermock-module-testng</artifactId>
        <version>${powermock.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>com.github.fppt</groupId> <!-- 单元测试，我们采用内嵌的 Redis 数据库 -->
        <artifactId>jedis-mock</artifactId>
        <version>${jedis-mock.version}</version>
      </dependency>

      <dependency>
        <groupId>uk.co.jemos.podam</groupId> <!-- 单元测试，随机生成 POJO 类 -->
        <artifactId>podam</artifactId>
        <version>${podam.version}</version>
      </dependency>
      <!-- 专属于 JDK8 安全漏洞升级 -->
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-core</artifactId>
        <version>${logback.version}</version>
      </dependency>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>${logback.version}</version>
      </dependency>
      <dependency>
        <groupId>io.github.joker-pper</groupId>
        <artifactId>java-type-tool</artifactId>
        <version>1.0.1</version>
      </dependency>

      <dependency>
        <artifactId>reflections</artifactId>
        <groupId>org.reflections</groupId>
        <version>${reflections.version}</version>
      </dependency>

      <dependency>
        <artifactId>hibernate-validator</artifactId>
        <groupId>org.hibernate.validator</groupId>
        <version>${hibernate-validator.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>



</project>
